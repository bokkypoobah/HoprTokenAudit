Script started on Tue Jan 12 21:11:48 2021
Now using node v12.19.0 (npm v6.14.8)
[?1034hIota:hoprnet bok$ yarn test --no-color [1P--no-color testtest[K[1@F[1@O[1@R[1@C[1@E[1@_[1@C[1@O[1@L[1@O[1@R[1@=[1@0[1@ 
                                                                                                                                                                                                yarn run v1.22.4
                                                                                                                                                                                                $ lerna run test --stream
[37;40mlerna[0m [0m[34;40mnotice[0m [0m[35mcli[0m v3.22.1
[0m[37;40mlerna[0m [0m[32minfo[0m[35m[0m Executing command in 5 packages: "yarn run test"
[0m@hoprnet/hopr-utils: $ mocha --parallel
@hoprnet/hopr-utils:   testing random permutation
@hoprnet/hopr-utils:     âœ“ should apply a random permutation
@hoprnet/hopr-utils:   getBootstrapAddresses
@hoprnet/hopr-utils:     âœ“ passed addresses resolved first
@hoprnet/hopr-utils:     âœ“ falls back to dns (446ms)
@hoprnet/hopr-utils:   testing promise pool
@hoprnet/hopr-utils:     âœ“ limitConcurrency should be similar to promise.all below a threshold
@hoprnet/hopr-utils:     âœ“ limitConcurrency should run a maximum of maxConcurrency promises at once (67ms)
@hoprnet/hopr-utils:     âœ“ should act like Promise.all - rejections cause exit
@hoprnet/hopr-utils:   testing random subset
@hoprnet/hopr-utils:     âœ“ should return a subset with a filter function
@hoprnet/hopr-utils:     âœ“ should return a subset
@hoprnet/hopr-utils:   test hash iterator
@hoprnet/hopr-utils:     âœ“ should iterate
@hoprnet/hopr-utils:   test clean directory
@hoprnet/hopr-utils:     âœ“ should delete the directory structure recursively
@hoprnet/hopr-utils:   test Pseudo-Random Permutation
@hoprnet/hopr-utils:     âœ“ should 'encrypt' and 'decrypt' a U8a
@hoprnet/hopr-utils:     âœ“ should 'decrypt' and 'encrypt' a U8a
@hoprnet/hopr-utils:   check gcd computation
@hoprnet/hopr-utils:     âœ“ should compute the gcd of two integers
@hoprnet/hopr-utils:   test moveDecimalPoint
@hoprnet/hopr-utils:     âœ“ should result to 100
@hoprnet/hopr-utils:     âœ“ should result to 100
@hoprnet/hopr-utils:     âœ“ should result to 0.01
@hoprnet/hopr-utils:     âœ“ should result to 0.01
@hoprnet/hopr-utils:   test convertPubKeyFromPeerId
@hoprnet/hopr-utils:     âœ“ should equal to a newly created pubkey from PeerId
@hoprnet/hopr-utils:     âœ“ should equal to pubkey from a PeerId CID
@hoprnet/hopr-utils:   test hasB58String
@hoprnet/hopr-utils:     âœ“ should return a boolean value
@hoprnet/hopr-utils:     âœ“ should return false to a content w/o a b58string
@hoprnet/hopr-utils:     âœ“ should return true to a content w/a b58string
@hoprnet/hopr-utils:     âœ“ should return true to a content w/a b58string
@hoprnet/hopr-utils:   test hasB58String
@hoprnet/hopr-utils:     âœ“ should return a string value
@hoprnet/hopr-utils:     âœ“ should return an empty string to a content w/o a b58string
@hoprnet/hopr-utils:     âœ“ should return the b58string to a content w/a b58string
@hoprnet/hopr-utils:     âœ“ should return the b58string to a content w/a b58string
@hoprnet/hopr-utils:   test randomFloat
@hoprnet/hopr-utils:     âœ“ should output a random float (96ms)
@hoprnet/hopr-utils:   testing random-number generator
@hoprnet/hopr-utils:     âœ“ should output generate values between [0, end)
@hoprnet/hopr-utils:     âœ“ should output values between [start, end) with start > 0
@hoprnet/hopr-utils:     âœ“ should yield correct values for edge cases
@hoprnet/hopr-utils:     âœ“ should verify the randomInteger by using deterministic seeds (55ms)
@hoprnet/hopr-utils:   test time
@hoprnet/hopr-utils:     durations
@hoprnet/hopr-utils:       âœ“ should be 1 second
@hoprnet/hopr-utils:       âœ“ should be 2 seconds
@hoprnet/hopr-utils:       âœ“ should be 1 minute
@hoprnet/hopr-utils:       âœ“ should be 2 minutes
@hoprnet/hopr-utils:       âœ“ should be 1 hour
@hoprnet/hopr-utils:       âœ“ should be 2 hours
@hoprnet/hopr-utils:       âœ“ should be 1 day
@hoprnet/hopr-utils:       âœ“ should be 2 days
@hoprnet/hopr-utils:   testing timeoutAfter
@hoprnet/hopr-utils:     âœ“ if promise resolves first, it is no-op
@hoprnet/hopr-utils:     âœ“ rejects if promise does not resolve
@hoprnet/hopr-utils:   test u8aAllocate spec
@hoprnet/hopr-utils:     âœ“ should not throw an error if the added page is smaller than the given offset
@hoprnet/hopr-utils:   Test Pseudo-Random Generator
@hoprnet/hopr-utils:     âœ“ should create a digest
@hoprnet/hopr-utils:   test u8a equals
@hoprnet/hopr-utils:     âœ“ should check whether two (or more) Uint8Arrays are equal
@hoprnet/hopr-utils:   test u8a concat
@hoprnet/hopr-utils:     âœ“ should always return 0 when undefined or same array is given
@hoprnet/hopr-utils:     âœ“ should run under 100ms execution time
@hoprnet/hopr-utils:     âœ“ should concat two Uint8Arrays
@hoprnet/hopr-utils:     âœ“ should concat two Uint8Arrays in under 100ms
@hoprnet/hopr-utils:   test toHex
@hoprnet/hopr-utils:     âœ“ should create a Hex string
@hoprnet/hopr-utils:   test length-prefixed to u8a
@hoprnet/hopr-utils:     âœ“ should convert a length-prefixed u8a to u8a
@hoprnet/hopr-utils:     âœ“ should convert a length-prefixed u8a with additional padding to u8a
@hoprnet/hopr-utils:   test u8a to length-prefixed u8a
@hoprnet/hopr-utils:     âœ“ should return a length-prefixed u8a
@hoprnet/hopr-utils:     âœ“ should return a length-prefixed u8a with additional padding
@hoprnet/hopr-utils:   test number to u8a
@hoprnet/hopr-utils:     âœ“ should return a u8a
@hoprnet/hopr-utils:     âœ“ should return a fixed-size u8a
@hoprnet/hopr-utils:     âœ“ should return a u8a
@hoprnet/hopr-utils:   test u8aCompare
@hoprnet/hopr-utils:     âœ“ should compare uint8Arrays
@hoprnet/hopr-utils:   test u8a addition
@hoprnet/hopr-utils:     âœ“ should add two u8a with modulo
@hoprnet/hopr-utils:     âœ“ should add two u8a with modulo in-place
@hoprnet/hopr-utils:   test u8aToNumber
@hoprnet/hopr-utils:     âœ“ should convert a u8a to a number
@hoprnet/hopr-utils:   testing XORing Uint8Array
@hoprnet/hopr-utils:     âœ“ should XOR two arrays
@hoprnet/hopr-utils:     âœ“ should XOR more than two arrays
@hoprnet/hopr-utils:   63 passing (9s)
@hoprnet/hopr-ethereum: $ hardhat test --no-compile --network hardhat
@hoprnet/hopr-ethereum:   Contract: ERC777
@hoprnet/hopr-ethereum:     with default operators
@hoprnet/hopr-ethereum:       - does not emit AuthorizedOperator events for default operators
@hoprnet/hopr-ethereum:       as an ERC20 token
@hoprnet/hopr-ethereum:         total supply
@hoprnet/hopr-ethereum:           âœ“ returns the total amount of tokens
@hoprnet/hopr-ethereum:         balanceOf
@hoprnet/hopr-ethereum:           when the requested account has no tokens
@hoprnet/hopr-ethereum:             âœ“ returns zero
@hoprnet/hopr-ethereum:           when the requested account has some tokens
@hoprnet/hopr-ethereum:             âœ“ returns the total amount of tokens
@hoprnet/hopr-ethereum:         transfer
@hoprnet/hopr-ethereum:           when the recipient is not the zero address
@hoprnet/hopr-ethereum:             when the sender does not have enough balance
@hoprnet/hopr-ethereum:               âœ“ reverts (56ms)
@hoprnet/hopr-ethereum:             when the sender transfers all balance
@hoprnet/hopr-ethereum:               âœ“ transfers the requested amount (46ms)
@hoprnet/hopr-ethereum:               âœ“ emits a transfer event
@hoprnet/hopr-ethereum: (node:33541) DeprecationWarning: expectEvent.inLogs() is deprecated. Use expectEvent() instead.
@hoprnet/hopr-ethereum:             when the sender transfers zero tokens
@hoprnet/hopr-ethereum:               âœ“ transfers the requested amount (38ms)
@hoprnet/hopr-ethereum:               âœ“ emits a transfer event
@hoprnet/hopr-ethereum:           when the recipient is the zero address
@hoprnet/hopr-ethereum:             âœ“ reverts
@hoprnet/hopr-ethereum:         transfer from
@hoprnet/hopr-ethereum:           when the token owner is not the zero address
@hoprnet/hopr-ethereum:             when the recipient is not the zero address
@hoprnet/hopr-ethereum:               when the spender has enough approved balance
@hoprnet/hopr-ethereum:                 when the token owner has enough balance
@hoprnet/hopr-ethereum:                   âœ“ transfers the requested amount (67ms)
@hoprnet/hopr-ethereum:                   âœ“ decreases the spender allowance
@hoprnet/hopr-ethereum:                   âœ“ emits a transfer event
@hoprnet/hopr-ethereum:                   âœ“ emits an approval event
@hoprnet/hopr-ethereum:                 when the token owner does not have enough balance
@hoprnet/hopr-ethereum:                   âœ“ reverts
@hoprnet/hopr-ethereum:               when the spender does not have enough approved balance
@hoprnet/hopr-ethereum:                 when the token owner has enough balance
@hoprnet/hopr-ethereum:                   âœ“ reverts (47ms)
@hoprnet/hopr-ethereum:                 when the token owner does not have enough balance
@hoprnet/hopr-ethereum:                   âœ“ reverts
@hoprnet/hopr-ethereum:             when the recipient is the zero address
@hoprnet/hopr-ethereum:               âœ“ reverts
@hoprnet/hopr-ethereum:           when the token owner is the zero address
@hoprnet/hopr-ethereum:             âœ“ reverts
@hoprnet/hopr-ethereum:         approve
@hoprnet/hopr-ethereum:           when the spender is not the zero address
@hoprnet/hopr-ethereum:             when the sender has enough balance
@hoprnet/hopr-ethereum:               âœ“ emits an approval event
@hoprnet/hopr-ethereum:               when there was no approved amount before
@hoprnet/hopr-ethereum:                 âœ“ approves the requested amount
@hoprnet/hopr-ethereum:               when the spender had an approved amount
@hoprnet/hopr-ethereum:                 âœ“ approves the requested amount and replaces the previous one
@hoprnet/hopr-ethereum:             when the sender does not have enough balance
@hoprnet/hopr-ethereum:               âœ“ emits an approval event
@hoprnet/hopr-ethereum:               when there was no approved amount before
@hoprnet/hopr-ethereum:                 âœ“ approves the requested amount
@hoprnet/hopr-ethereum:               when the spender had an approved amount
@hoprnet/hopr-ethereum:                 âœ“ approves the requested amount and replaces the previous one
@hoprnet/hopr-ethereum:           when the spender is the zero address
@hoprnet/hopr-ethereum:             âœ“ reverts
@hoprnet/hopr-ethereum:         _approve
@hoprnet/hopr-ethereum:           when the spender is not the zero address
@hoprnet/hopr-ethereum:             when the sender has enough balance
@hoprnet/hopr-ethereum:               âœ“ emits an approval event
@hoprnet/hopr-ethereum:               when there was no approved amount before
@hoprnet/hopr-ethereum:                 âœ“ approves the requested amount
@hoprnet/hopr-ethereum:               when the spender had an approved amount
@hoprnet/hopr-ethereum:                 âœ“ approves the requested amount and replaces the previous one
@hoprnet/hopr-ethereum:             when the sender does not have enough balance
@hoprnet/hopr-ethereum:               âœ“ emits an approval event
@hoprnet/hopr-ethereum:               when there was no approved amount before
@hoprnet/hopr-ethereum:                 âœ“ approves the requested amount
@hoprnet/hopr-ethereum:               when the spender had an approved amount
@hoprnet/hopr-ethereum:                 âœ“ approves the requested amount and replaces the previous one
@hoprnet/hopr-ethereum:           when the spender is the zero address
@hoprnet/hopr-ethereum:             âœ“ reverts
@hoprnet/hopr-ethereum:           when the owner is the zero address
@hoprnet/hopr-ethereum:             âœ“ reverts
@hoprnet/hopr-ethereum:       basic information
@hoprnet/hopr-ethereum:         âœ“ returns the name
@hoprnet/hopr-ethereum:         âœ“ returns the symbol
@hoprnet/hopr-ethereum:         âœ“ returns a granularity of 1
@hoprnet/hopr-ethereum:         âœ“ returns the default operators
@hoprnet/hopr-ethereum:         âœ“ default operators are operators for all accounts
@hoprnet/hopr-ethereum:         âœ“ returns the total supply
@hoprnet/hopr-ethereum:         âœ“ returns 18 when decimals is called
@hoprnet/hopr-ethereum:         âœ“ the ERC777Token interface is registered in the registry
@hoprnet/hopr-ethereum:         âœ“ the ERC20Token interface is registered in the registry
@hoprnet/hopr-ethereum:       balanceOf
@hoprnet/hopr-ethereum:         for an account with no tokens
@hoprnet/hopr-ethereum:           âœ“ returns zero
@hoprnet/hopr-ethereum:         for an account with tokens
@hoprnet/hopr-ethereum:           âœ“ returns their balance
@hoprnet/hopr-ethereum:       with no ERC777TokensSender and no ERC777TokensRecipient implementers
@hoprnet/hopr-ethereum:         send/burn
@hoprnet/hopr-ethereum:           direct send
@hoprnet/hopr-ethereum:             when the sender has tokens
@hoprnet/hopr-ethereum:               âœ“ can send an amount of 0 (81ms)
@hoprnet/hopr-ethereum:               âœ“ can send an amount of 1 (58ms)
@hoprnet/hopr-ethereum:               âœ“ reverts when sending more than the balance
@hoprnet/hopr-ethereum:               âœ“ reverts when sending to the zero address
@hoprnet/hopr-ethereum:             when the sender has no tokens
@hoprnet/hopr-ethereum:               âœ“ can send an amount of 0 (44ms)
@hoprnet/hopr-ethereum:               âœ“ reverts when sending a non-zero amount
@hoprnet/hopr-ethereum:           direct burn
@hoprnet/hopr-ethereum:             when the sender has tokens
@hoprnet/hopr-ethereum:               âœ“ can burn an amount of 0
@hoprnet/hopr-ethereum:               âœ“ can burn an amount of 1 (39ms)
@hoprnet/hopr-ethereum:               âœ“ reverts when burning more than the balance
@hoprnet/hopr-ethereum:             when the sender has no tokens
@hoprnet/hopr-ethereum:               âœ“ can burn an amount of 0
@hoprnet/hopr-ethereum:               âœ“ reverts when burning a non-zero amount
@hoprnet/hopr-ethereum:           with self operator
@hoprnet/hopr-ethereum:             operator send
@hoprnet/hopr-ethereum:               when the sender has tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 0 (43ms)
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 1 (48ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending more than the balance
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending to the zero address
@hoprnet/hopr-ethereum:               when the sender has no tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 0 (50ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending a non-zero amount (45ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending from the zero address
@hoprnet/hopr-ethereum:             operator burn
@hoprnet/hopr-ethereum:               when the sender has tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 0
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 1
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning more than the balance
@hoprnet/hopr-ethereum:               when the sender has no tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 0
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning a non-zero amount
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning from the zero address
@hoprnet/hopr-ethereum:           with first default operator
@hoprnet/hopr-ethereum:             operator send
@hoprnet/hopr-ethereum:               when the sender has tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 0 (52ms)
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 1 (96ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending more than the balance
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending to the zero address
@hoprnet/hopr-ethereum:               when the sender has no tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 0 (41ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending a non-zero amount
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending from the zero address
@hoprnet/hopr-ethereum:             operator burn
@hoprnet/hopr-ethereum:               when the sender has tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 0
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 1 (38ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning more than the balance
@hoprnet/hopr-ethereum:               when the sender has no tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 0 (40ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning a non-zero amount
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning from the zero address
@hoprnet/hopr-ethereum:           with second default operator
@hoprnet/hopr-ethereum:             operator send
@hoprnet/hopr-ethereum:               when the sender has tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 0 (46ms)
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 1 (43ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending more than the balance
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending to the zero address
@hoprnet/hopr-ethereum:               when the sender has no tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 0 (51ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending a non-zero amount
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending from the zero address
@hoprnet/hopr-ethereum:             operator burn
@hoprnet/hopr-ethereum:               when the sender has tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 0 (107ms)
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 1
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning more than the balance
@hoprnet/hopr-ethereum:               when the sender has no tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 0
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning a non-zero amount
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning from the zero address
@hoprnet/hopr-ethereum:           before authorizing a new operator
@hoprnet/hopr-ethereum:             operator send
@hoprnet/hopr-ethereum:               âœ“ reverts
@hoprnet/hopr-ethereum:             operator burn
@hoprnet/hopr-ethereum:               âœ“ reverts
@hoprnet/hopr-ethereum:           with new authorized operator
@hoprnet/hopr-ethereum:             operator send
@hoprnet/hopr-ethereum:               when the sender has tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 0 (42ms)
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 1 (71ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending more than the balance
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending to the zero address
@hoprnet/hopr-ethereum:               when the sender has no tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can send an amount of 0 (47ms)
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending a non-zero amount
@hoprnet/hopr-ethereum:                 âœ“ reverts when sending from the zero address
@hoprnet/hopr-ethereum:             operator burn
@hoprnet/hopr-ethereum:               when the sender has tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 0
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 1
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning more than the balance
@hoprnet/hopr-ethereum:               when the sender has no tokens
@hoprnet/hopr-ethereum:                 âœ“ operator can burn an amount of 0
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning a non-zero amount
@hoprnet/hopr-ethereum:                 âœ“ reverts when burning from the zero address
@hoprnet/hopr-ethereum:             with revoked operator
@hoprnet/hopr-ethereum:               operator send
@hoprnet/hopr-ethereum:                 âœ“ reverts
@hoprnet/hopr-ethereum:               operator burn
@hoprnet/hopr-ethereum:                 âœ“ reverts
@hoprnet/hopr-ethereum:         mint (internal)
@hoprnet/hopr-ethereum:           with default operator
@hoprnet/hopr-ethereum:             âœ“ can (internal) mint an amount of 0
@hoprnet/hopr-ethereum:             âœ“ can (internal) mint an amount of 5
@hoprnet/hopr-ethereum:             âœ“ reverts when minting tokens for the zero address
@hoprnet/hopr-ethereum:           with non operator
@hoprnet/hopr-ethereum:             âœ“ can (internal) mint an amount of 0
@hoprnet/hopr-ethereum:             âœ“ can (internal) mint an amount of 5
@hoprnet/hopr-ethereum:             âœ“ reverts when minting tokens for the zero address
@hoprnet/hopr-ethereum:       operator management
@hoprnet/hopr-ethereum:         âœ“ accounts are their own operator
@hoprnet/hopr-ethereum:         âœ“ reverts when self-authorizing
@hoprnet/hopr-ethereum:         âœ“ reverts when self-revoking
@hoprnet/hopr-ethereum:         âœ“ non-operators can be revoked
@hoprnet/hopr-ethereum:         âœ“ non-operators can be authorized
@hoprnet/hopr-ethereum:         new operators
@hoprnet/hopr-ethereum:           âœ“ are not added to the default operators list
@hoprnet/hopr-ethereum:           âœ“ can be re-authorized
@hoprnet/hopr-ethereum:           âœ“ can be revoked
@hoprnet/hopr-ethereum:         default operators
@hoprnet/hopr-ethereum:           âœ“ can be re-authorized
@hoprnet/hopr-ethereum:           âœ“ can be revoked
@hoprnet/hopr-ethereum:           âœ“ cannot be revoked for themselves
@hoprnet/hopr-ethereum:           with revoked default operator
@hoprnet/hopr-ethereum:             âœ“ default operator is not revoked for other holders
@hoprnet/hopr-ethereum:             âœ“ other default operators are not revoked
@hoprnet/hopr-ethereum:             âœ“ default operators list is not modified
@hoprnet/hopr-ethereum:             âœ“ revoked default operator can be re-authorized
@hoprnet/hopr-ethereum:       send and receive hooks
@hoprnet/hopr-ethereum:         tokensReceived
@hoprnet/hopr-ethereum:           with no ERC777TokensRecipient implementer
@hoprnet/hopr-ethereum:             with contract recipient
@hoprnet/hopr-ethereum:               âœ“ send reverts
@hoprnet/hopr-ethereum:               âœ“ operatorSend reverts
@hoprnet/hopr-ethereum:               âœ“ mint (internal) reverts
@hoprnet/hopr-ethereum:               âœ“ (ERC20) transfer succeeds
@hoprnet/hopr-ethereum:               âœ“ (ERC20) transferFrom succeeds
@hoprnet/hopr-ethereum:           with ERC777TokensRecipient implementer
@hoprnet/hopr-ethereum:             with contract as implementer for an externally owned account
@hoprnet/hopr-ethereum:               when TokensRecipient reverts
@hoprnet/hopr-ethereum:                 âœ“ send reverts (43ms)
@hoprnet/hopr-ethereum:                 âœ“ operatorSend reverts (39ms)
@hoprnet/hopr-ethereum:                 âœ“ mint (internal) reverts
@hoprnet/hopr-ethereum:               when TokensRecipient does not revert
@hoprnet/hopr-ethereum:                 âœ“ TokensRecipient receives send data and is called after state mutation (38ms)
@hoprnet/hopr-ethereum:                 âœ“ TokensRecipient receives operatorSend data and is called after state mutation
@hoprnet/hopr-ethereum:                 âœ“ TokensRecipient receives mint (internal) data and is called after state mutation
@hoprnet/hopr-ethereum:             with contract as implementer for another contract
@hoprnet/hopr-ethereum:               when TokensRecipient reverts
@hoprnet/hopr-ethereum:                 âœ“ send reverts
@hoprnet/hopr-ethereum:                 âœ“ operatorSend reverts
@hoprnet/hopr-ethereum:                 âœ“ mint (internal) reverts (47ms)
@hoprnet/hopr-ethereum:               when TokensRecipient does not revert
@hoprnet/hopr-ethereum:                 âœ“ TokensRecipient receives send data and is called after state mutation
@hoprnet/hopr-ethereum:                 âœ“ TokensRecipient receives operatorSend data and is called after state mutation
@hoprnet/hopr-ethereum:                 âœ“ TokensRecipient receives mint (internal) data and is called after state mutation
@hoprnet/hopr-ethereum:             with contract as implementer for itself
@hoprnet/hopr-ethereum:               when TokensRecipient reverts
@hoprnet/hopr-ethereum:                 âœ“ send reverts (40ms)
@hoprnet/hopr-ethereum:                 âœ“ operatorSend reverts (41ms)
@hoprnet/hopr-ethereum:                 âœ“ mint (internal) reverts
@hoprnet/hopr-ethereum:               when TokensRecipient does not revert
@hoprnet/hopr-ethereum:                 âœ“ TokensRecipient receives send data and is called after state mutation
@hoprnet/hopr-ethereum:                 âœ“ TokensRecipient receives operatorSend data and is called after state mutation
@hoprnet/hopr-ethereum:                 âœ“ TokensRecipient receives mint (internal) data and is called after state mutation
@hoprnet/hopr-ethereum:         tokensToSend
@hoprnet/hopr-ethereum:           with a contract as implementer for an externally owned account
@hoprnet/hopr-ethereum:             when TokensSender reverts
@hoprnet/hopr-ethereum:               âœ“ send reverts
@hoprnet/hopr-ethereum:               âœ“ operatorSend reverts
@hoprnet/hopr-ethereum:               âœ“ burn reverts
@hoprnet/hopr-ethereum:               âœ“ operatorBurn reverts
@hoprnet/hopr-ethereum:             when TokensSender does not revert
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives send data and is called before state mutation (38ms)
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives operatorSend data and is called before state mutation (41ms)
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives burn data and is called before state mutation
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives operatorBurn data and is called before state mutation
@hoprnet/hopr-ethereum:           with contract as implementer for another contract
@hoprnet/hopr-ethereum:             when TokensSender reverts
@hoprnet/hopr-ethereum:               âœ“ send reverts
@hoprnet/hopr-ethereum:               âœ“ operatorSend reverts
@hoprnet/hopr-ethereum:               âœ“ burn reverts
@hoprnet/hopr-ethereum:               âœ“ operatorBurn reverts
@hoprnet/hopr-ethereum:             when TokensSender does not revert
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives send data and is called before state mutation (56ms)
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives operatorSend data and is called before state mutation (45ms)
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives burn data and is called before state mutation
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives operatorBurn data and is called before state mutation
@hoprnet/hopr-ethereum:           with a contract as implementer for itself
@hoprnet/hopr-ethereum:             when TokensSender reverts
@hoprnet/hopr-ethereum:               âœ“ send reverts
@hoprnet/hopr-ethereum:               âœ“ operatorSend reverts
@hoprnet/hopr-ethereum:               âœ“ burn reverts
@hoprnet/hopr-ethereum:               âœ“ operatorBurn reverts
@hoprnet/hopr-ethereum:             when TokensSender does not revert
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives send data and is called before state mutation (49ms)
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives operatorSend data and is called before state mutation (44ms)
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives burn data and is called before state mutation (40ms)
@hoprnet/hopr-ethereum:               âœ“ TokensSender receives operatorBurn data and is called before state mutation
@hoprnet/hopr-ethereum:     with no default operators
@hoprnet/hopr-ethereum:       âœ“ default operators list is empty
@hoprnet/hopr-ethereum:   ERC777Snapshot
@hoprnet/hopr-ethereum:     âœ“ should revert when trying to snapshot unsupported amount
@hoprnet/hopr-ethereum:     totalSupplyAt
@hoprnet/hopr-ethereum:       âœ“ should return 0 at block 0
@hoprnet/hopr-ethereum:       âœ“ should return latest totalSupply at block number after creation
@hoprnet/hopr-ethereum:       âœ“ should return latest totalSupply at a not-yet-created block number
@hoprnet/hopr-ethereum:       with initial snapshot
@hoprnet/hopr-ethereum:         with no supply changes after the snapshot
@hoprnet/hopr-ethereum:           âœ“ returns the current total supply
@hoprnet/hopr-ethereum:         with supply changes after the snapshot
@hoprnet/hopr-ethereum:           âœ“ returns the total supply before the changes
@hoprnet/hopr-ethereum:           with a second snapshot after supply changes
@hoprnet/hopr-ethereum:             âœ“ snapshots return the supply before and after the changes
@hoprnet/hopr-ethereum:           with multiple snapshots after supply changes
@hoprnet/hopr-ethereum:             âœ“ all posterior snapshots return the supply after the changes (83ms)
@hoprnet/hopr-ethereum:     balanceOfAt
@hoprnet/hopr-ethereum:       âœ“ should return 0 at block 0
@hoprnet/hopr-ethereum:       âœ“ should return latest balance at block number after creation
@hoprnet/hopr-ethereum:       âœ“ should return latest balance at a not-yet-created block number (46ms)
@hoprnet/hopr-ethereum:       with initial snapshot
@hoprnet/hopr-ethereum:         with no balance changes after the snapshot
@hoprnet/hopr-ethereum:           âœ“ returns the current balance for all accounts
@hoprnet/hopr-ethereum:         with balance changes after the snapshot
@hoprnet/hopr-ethereum:           âœ“ returns the balances before the changes
@hoprnet/hopr-ethereum:           with a second snapshot after supply changes
@hoprnet/hopr-ethereum:             âœ“ snapshots return the balances before and after the changes (94ms)
@hoprnet/hopr-ethereum:           with multiple snapshots after supply changes
@hoprnet/hopr-ethereum:             âœ“ all posterior snapshots return the supply after the changes (267ms)
@hoprnet/hopr-ethereum:   HoprChannels
@hoprnet/hopr-ethereum:     integration tests
@hoprnet/hopr-ethereum:       make payments between 'partyA' and 'partyB' using a fresh channel and 'fundChannel'
@hoprnet/hopr-ethereum:         âœ“ 'partyA' should fund 'partyA' with 1 HOPR (83ms)
@hoprnet/hopr-ethereum:         âœ“ 'partyB' should fund 'partyB' with 1 HOPR
@hoprnet/hopr-ethereum:         âœ“ should set hashed secret for 'partyA'
@hoprnet/hopr-ethereum:         âœ“ should set hashed secret for 'partyB'
@hoprnet/hopr-ethereum:         âœ“ should open channel
@hoprnet/hopr-ethereum:         âœ“ 'partyA' should reedem winning ticket of 0.2 HOPR (52ms)
@hoprnet/hopr-ethereum:         âœ“ 'partyB' should reedem winning ticket of 1.2 HOPR (249ms)
@hoprnet/hopr-ethereum:         âœ“ 'partyB' should initiate closure (368ms)
@hoprnet/hopr-ethereum:         âœ“ 'partyA' should reedem winning ticket of 0.5 HOPR (39ms)
@hoprnet/hopr-ethereum:         âœ“ 'partyA' should close channel (67ms)
@hoprnet/hopr-ethereum:       make payments between 'partyA' and 'partyB' using a recycled channel and 'fundChannelWithSig'
@hoprnet/hopr-ethereum:         âœ“ 'partyA' and 'partyB' should fund a total of 1 HOPR (129ms)
@hoprnet/hopr-ethereum:         âœ“ should set hashed secret for 'partyA'
@hoprnet/hopr-ethereum:         âœ“ should set hashed secret for 'partyB'
@hoprnet/hopr-ethereum:         âœ“ should open channel
@hoprnet/hopr-ethereum:         âœ“ 'partyA' should reedem winning ticket of 0.3 HOPR (62ms)
@hoprnet/hopr-ethereum:         âœ“ 'partyB' should reedem winning ticket of 0.5 HOPR
@hoprnet/hopr-ethereum:         âœ“ 'partyB' should initiate closure (43ms)
@hoprnet/hopr-ethereum:         âœ“ 'partyA' should reedem winning ticket of 1 HOPR
@hoprnet/hopr-ethereum:         âœ“ 'partyB' should close channel (39ms)
@hoprnet/hopr-ethereum:     unit tests
@hoprnet/hopr-ethereum:       âœ“ should initialize the on-chain values
@hoprnet/hopr-ethereum:       âœ“ should revert on falsy initialization values (169ms)
@hoprnet/hopr-ethereum:       âœ“ should have set hashedSecret correctly (39ms)
@hoprnet/hopr-ethereum:       âœ“ should have funded channel correctly using 'fundChannel' (68ms)
@hoprnet/hopr-ethereum:       âœ“ ticket 'signer' should be 'partyA'
@hoprnet/hopr-ethereum:       âœ“ fund 'signer' should be 'partyA'
@hoprnet/hopr-ethereum:       âœ“ should open a channel and redeem one ticket (967ms)
@hoprnet/hopr-ethereum:       âœ“ should fail when creating an open channel a second time (119ms)
@hoprnet/hopr-ethereum:       âœ“ should fail 'fundChannel' when token balance too low (65ms)
@hoprnet/hopr-ethereum:       âœ“ should initiate channel closure by partyA (129ms)
@hoprnet/hopr-ethereum:       âœ“ should initiate channel closure by partyB (150ms)
@hoprnet/hopr-ethereum:       âœ“ should 'claimChannelClosure' before 'closureTime' when partyA is initiator (689ms)
@hoprnet/hopr-ethereum:       âœ“ should fail when 'claimChannelClosure' is called before 'closureTime' (81ms)
@hoprnet/hopr-ethereum:   HoprDistributor
@hoprnet/hopr-ethereum:     schedules
@hoprnet/hopr-ethereum:       âœ“ should add schedule (67ms)
@hoprnet/hopr-ethereum:       âœ“ should fail to add schedule again
@hoprnet/hopr-ethereum:       âœ“ should fail to add schedule with mismatching inputs
@hoprnet/hopr-ethereum:       âœ“ should fail to add schedule when durations are not in ascending order
@hoprnet/hopr-ethereum:       âœ“ should fail to add schedule when durations are not in ascending order
@hoprnet/hopr-ethereum:       âœ“ should fail to add schedule when percent is higher than multiplier
@hoprnet/hopr-ethereum:     allocations
@hoprnet/hopr-ethereum:       âœ“ should fail to add allocation when schedule does not exist
@hoprnet/hopr-ethereum:       âœ“ should add allocation (74ms)
@hoprnet/hopr-ethereum:       âœ“ should fail to add allocation with mismatching inputs
@hoprnet/hopr-ethereum:       âœ“ should fail to add allocation again (39ms)
@hoprnet/hopr-ethereum:       âœ“ should add second allocation (111ms)
@hoprnet/hopr-ethereum:     claimable
@hoprnet/hopr-ethereum:       âœ“ should be able to claim 100 after 2 minutes using SCHEDULE_1_MIN_ALL
@hoprnet/hopr-ethereum:       âœ“ should be able to claim 0 after 2 minutes using SCHEDULE_TEAM
@hoprnet/hopr-ethereum:       âœ“ should be able to claim 14 after 5 minutes using SCHEDULE_TEAM
@hoprnet/hopr-ethereum:       âœ“ should be able to claim 28 after 8 minutes using SCHEDULE_TEAM
@hoprnet/hopr-ethereum:       âœ“ should be able to claim 100 after 17 minutes using SCHEDULE_TEAM
@hoprnet/hopr-ethereum:     claim
@hoprnet/hopr-ethereum:       âœ“ should claim 100 after 2 minutes using SCHEDULE_1_MIN_ALL (39ms)
@hoprnet/hopr-ethereum:       âœ“ should claim 0 after 2 minutes using SCHEDULE_TEAM
@hoprnet/hopr-ethereum:       âœ“ should claim 14 after 5 minutes using SCHEDULE_TEAM (41ms)
@hoprnet/hopr-ethereum:       âœ“ should claim 28 after 8 minutes using SCHEDULE_TEAM (117ms)
@hoprnet/hopr-ethereum:       âœ“ should claim 100 after 17 minutes using SCHEDULE_TEAM (62ms)
@hoprnet/hopr-ethereum:     claimFor
@hoprnet/hopr-ethereum:       âœ“ should claim 100 after 2 minutes using SCHEDULE_1_MIN_ALL (47ms)
@hoprnet/hopr-ethereum:       âœ“ should claim 0 after 2 minutes using SCHEDULE_TEAM (59ms)
@hoprnet/hopr-ethereum:       âœ“ should claim 14 after 5 minutes using SCHEDULE_TEAM (44ms)
@hoprnet/hopr-ethereum:       âœ“ should claim 28 after 8 minutes using SCHEDULE_TEAM (48ms)
@hoprnet/hopr-ethereum:       âœ“ should claim 100 after 17 minutes using SCHEDULE_TEAM (75ms)
@hoprnet/hopr-ethereum:     revoke
@hoprnet/hopr-ethereum:       âœ“ should fail to claim SCHEDULE_1_MIN_ALL after revoked (41ms)
@hoprnet/hopr-ethereum:       âœ“ should fail to claim SCHEDULE_TEAM after revoked (58ms)
@hoprnet/hopr-ethereum:       âœ“ should fail to revoke if allocation does not exist
@hoprnet/hopr-ethereum:     max mint
@hoprnet/hopr-ethereum:       âœ“ should fail to allocate if totalToBeMinted is higher than max mint
@hoprnet/hopr-ethereum:   HoprFaucet
@hoprnet/hopr-ethereum:     âœ“ should mint tokens
@hoprnet/hopr-ethereum:     âœ“ should pause minting (64ms)
@hoprnet/hopr-ethereum:     âœ“ should unpause minting (48ms)
@hoprnet/hopr-ethereum:     âœ“ should not allow pausing by unauthorized address (44ms)
@hoprnet/hopr-ethereum:     âœ“ should not allow unpausing by unauthorized address
@hoprnet/hopr-ethereum:   HoprFaucet with singleUser enabled
@hoprnet/hopr-ethereum:     âœ“ should mint tokens
@hoprnet/hopr-ethereum:     âœ“ should pause minting
@hoprnet/hopr-ethereum:     âœ“ should unpause minting
@hoprnet/hopr-ethereum:     âœ“ should not allow minting by unauthorized address
@hoprnet/hopr-ethereum:     âœ“ should not allow pausing by unauthorized address (39ms)
@hoprnet/hopr-ethereum:     âœ“ should not allow unpausing by unauthorized address
@hoprnet/hopr-ethereum:   HoprMinter
@hoprnet/hopr-ethereum:     unit tests
@hoprnet/hopr-ethereum:       âœ“ 'user' should fail to 'increaseBalance'
@hoprnet/hopr-ethereum:       âœ“ should fail to 'increaseBalance' after deadline
@hoprnet/hopr-ethereum:       âœ“ should fail to 'increaseBalance' past maximum
@hoprnet/hopr-ethereum:     integration tests
@hoprnet/hopr-ethereum:       âœ“ claim 50 HOPR after 50 days (39ms)
@hoprnet/hopr-ethereum:       âœ“ claim 25 HOPR after 25 days (96ms)
@hoprnet/hopr-ethereum:       âœ“ increase user's minter balance by 75
@hoprnet/hopr-ethereum:       âœ“ claim 60 HOPR after 15 days (50ms)
@hoprnet/hopr-ethereum:       âœ“ claim remaining HOPR after deadline
@hoprnet/hopr-ethereum:   HoprToken
@hoprnet/hopr-ethereum:     âœ“ should be named 'HOPR Token'
@hoprnet/hopr-ethereum:     âœ“ should have symbol 'HOPR'
@hoprnet/hopr-ethereum:     âœ“ should have a supply of '0' (41ms)
@hoprnet/hopr-ethereum:     âœ“ should fail mint
@hoprnet/hopr-ethereum:     âœ“ 'owner' should be a minter
@hoprnet/hopr-ethereum:     âœ“ should mint 100 HOPR for 'owner'
@hoprnet/hopr-ethereum:   282 passing (40s)
@hoprnet/hopr-ethereum:   1 pending
@hoprnet/hopr-core-ethereum: $ mocha --exit
@hoprnet/hopr-core-ethereum: $ hardhat compile && hardhat extract
@hoprnet/hopr-core-ethereum: Nothing to compile
@hoprnet/hopr-core-ethereum: Creating Typechain artifacts in directory ./types for target truffle-v5
@hoprnet/hopr-core-ethereum: Successfully generated Typechain artifacts!
@hoprnet/hopr-core-ethereum: Extracting ABIs
@hoprnet/hopr-core-ethereum: Extracted ABIs
@hoprnet/hopr-core-ethereum:   âœ“ should create new signedTicket using struct
@hoprnet/hopr-core-ethereum:   âœ“ should create new signedTicket using array
@hoprnet/hopr-core-ethereum:   âœ“ should create new signedTicket out of continous memory
@hoprnet/hopr-core-ethereum:   test Account class
@hoprnet/hopr-core-ethereum: Starting ganache instance
@hoprnet/hopr-core-ethereum: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core-ethereum: $ hardhat migrate
@hoprnet/hopr-core-ethereum: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Running task "migrate" with config: {
@hoprnet/hopr-core-ethereum:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   shouldVerify: false,
@hoprnet/hopr-core-ethereum:   mintUsing: 'minter',
@hoprnet/hopr-core-ethereum:   revokeRoles: false
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Deploying ERC1820Registry
@hoprnet/hopr-core-ethereum: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core-ethereum: Deploying hoprToken
@hoprnet/hopr-core-ethereum: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core-ethereum: Deploying hoprChannels
@hoprnet/hopr-core-ethereum: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core-ethereum: Deploying hoprMinter
@hoprnet/hopr-core-ethereum: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core-ethereum: Updating addresses.json
@hoprnet/hopr-core-ethereum: Updated addresses.json for localhost network
@hoprnet/hopr-core-ethereum:     ticketEpoch
@hoprnet/hopr-core-ethereum:       âœ“ should be 1 initially
@hoprnet/hopr-core-ethereum:       âœ“ should be 2 after setting new secret
@hoprnet/hopr-core-ethereum:       âœ“ should be 3 after reconnecting to web3 (2004ms)
@hoprnet/hopr-core-ethereum: Closing ganache instance
@hoprnet/hopr-core-ethereum: Network closed
@hoprnet/hopr-core-ethereum:   test Channel class
@hoprnet/hopr-core-ethereum: Starting ganache instance
@hoprnet/hopr-core-ethereum: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core-ethereum: $ hardhat migrate
@hoprnet/hopr-core-ethereum: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Running task "migrate" with config: {
@hoprnet/hopr-core-ethereum:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   shouldVerify: false,
@hoprnet/hopr-core-ethereum:   mintUsing: 'minter',
@hoprnet/hopr-core-ethereum:   revokeRoles: false
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Deploying ERC1820Registry
@hoprnet/hopr-core-ethereum: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core-ethereum: Deploying hoprToken
@hoprnet/hopr-core-ethereum: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core-ethereum: Deploying hoprChannels
@hoprnet/hopr-core-ethereum: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core-ethereum: Deploying hoprMinter
@hoprnet/hopr-core-ethereum: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core-ethereum: Updating addresses.json
@hoprnet/hopr-core-ethereum: Updated addresses.json for localhost network
@hoprnet/hopr-core-ethereum:     âœ“ should create a channel and submit tickets (4687ms)
@hoprnet/hopr-core-ethereum: Closing ganache instance
@hoprnet/hopr-core-ethereum: Network closed
@hoprnet/hopr-core-ethereum:   test dbKeys
@hoprnet/hopr-core-ethereum:     âœ“ should create 'Channel' key
@hoprnet/hopr-core-ethereum:     âœ“ should parse 'Channel' key
@hoprnet/hopr-core-ethereum:     âœ“ should create 'Challenge' key
@hoprnet/hopr-core-ethereum:     âœ“ should parse 'Challenge' key
@hoprnet/hopr-core-ethereum:     âœ“ should create 'ChannelId' key
@hoprnet/hopr-core-ethereum:     âœ“ should create 'Nonce' key
@hoprnet/hopr-core-ethereum:     âœ“ should create 'OnChainSecret' key
@hoprnet/hopr-core-ethereum:     âœ“ should create 'AcknowledgedTicket' key
@hoprnet/hopr-core-ethereum:     âœ“ should parse 'AcknowledgedTicket' key
@hoprnet/hopr-core-ethereum:     âœ“ should create 'ConfirmedBlockNumber' key
@hoprnet/hopr-core-ethereum:     âœ“ should create 'ChannelEntry' key
@hoprnet/hopr-core-ethereum:     âœ“ should parse 'ChannelEntry' key
@hoprnet/hopr-core-ethereum:   test hashedSecret
@hoprnet/hopr-core-ethereum:     random pre-image
@hoprnet/hopr-core-ethereum: Starting ganache instance
@hoprnet/hopr-core-ethereum: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core-ethereum: $ hardhat migrate
@hoprnet/hopr-core-ethereum: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Running task "migrate" with config: {
@hoprnet/hopr-core-ethereum:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   shouldVerify: false,
@hoprnet/hopr-core-ethereum:   mintUsing: 'minter',
@hoprnet/hopr-core-ethereum:   revokeRoles: false
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Deploying ERC1820Registry
@hoprnet/hopr-core-ethereum: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core-ethereum: Deploying hoprToken
@hoprnet/hopr-core-ethereum: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core-ethereum: Deploying hoprChannels
@hoprnet/hopr-core-ethereum: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core-ethereum: Deploying hoprMinter
@hoprnet/hopr-core-ethereum: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core-ethereum: Updating addresses.json
@hoprnet/hopr-core-ethereum: Updated addresses.json for localhost network
@hoprnet/hopr-core-ethereum: $ hardhat fund --address 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E --accounts-to-fund 1
@hoprnet/hopr-core-ethereum: Running task "fund" with config: {
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   address: '0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E',
@hoprnet/hopr-core-ethereum:   amount: '1000000000000000000000000',
@hoprnet/hopr-core-ethereum:   accounts: [ '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f' ]
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Funded: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum:       âœ“ should publish a hashed secret (1249ms)
@hoprnet/hopr-core-ethereum: Closing ganache instance
@hoprnet/hopr-core-ethereum: Network closed
@hoprnet/hopr-core-ethereum:     deterministic debug pre-image
@hoprnet/hopr-core-ethereum: Starting ganache instance
@hoprnet/hopr-core-ethereum: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core-ethereum: $ hardhat migrate
@hoprnet/hopr-core-ethereum: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Running task "migrate" with config: {
@hoprnet/hopr-core-ethereum:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   shouldVerify: false,
@hoprnet/hopr-core-ethereum:   mintUsing: 'minter',
@hoprnet/hopr-core-ethereum:   revokeRoles: false
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Deploying ERC1820Registry
@hoprnet/hopr-core-ethereum: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core-ethereum: Deploying hoprToken
@hoprnet/hopr-core-ethereum: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core-ethereum: Deploying hoprChannels
@hoprnet/hopr-core-ethereum: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core-ethereum: Deploying hoprMinter
@hoprnet/hopr-core-ethereum: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core-ethereum: Updating addresses.json
@hoprnet/hopr-core-ethereum: Updated addresses.json for localhost network
@hoprnet/hopr-core-ethereum: $ hardhat fund --address 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E --accounts-to-fund 1
@hoprnet/hopr-core-ethereum: Running task "fund" with config: {
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   address: '0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E',
@hoprnet/hopr-core-ethereum:   amount: '1000000000000000000000000',
@hoprnet/hopr-core-ethereum:   accounts: [ '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f' ]
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Funded: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum:       âœ“ should publish a hashed secret (1334ms)
@hoprnet/hopr-core-ethereum:       âœ“ should reserve a preImage for tickets with 100% winning probabilty resp. should not reserve for 0% winning probability (367ms)
@hoprnet/hopr-core-ethereum:       âœ“ should reserve a preImage for tickets with arbitrary winning probability (3346ms)
@hoprnet/hopr-core-ethereum: Closing ganache instance
@hoprnet/hopr-core-ethereum: Network closed
@hoprnet/hopr-core-ethereum:     integration
@hoprnet/hopr-core-ethereum: Starting ganache instance
@hoprnet/hopr-core-ethereum: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core-ethereum: $ hardhat migrate
@hoprnet/hopr-core-ethereum: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Running task "migrate" with config: {
@hoprnet/hopr-core-ethereum:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   shouldVerify: false,
@hoprnet/hopr-core-ethereum:   mintUsing: 'minter',
@hoprnet/hopr-core-ethereum:   revokeRoles: false
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Deploying ERC1820Registry
@hoprnet/hopr-core-ethereum: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core-ethereum: Deploying hoprToken
@hoprnet/hopr-core-ethereum: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core-ethereum: Deploying hoprChannels
@hoprnet/hopr-core-ethereum: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core-ethereum: Deploying hoprMinter
@hoprnet/hopr-core-ethereum: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core-ethereum: Updating addresses.json
@hoprnet/hopr-core-ethereum: Updated addresses.json for localhost network
@hoprnet/hopr-core-ethereum: $ hardhat fund --address 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E --accounts-to-fund 1
@hoprnet/hopr-core-ethereum: Running task "fund" with config: {
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   address: '0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E',
@hoprnet/hopr-core-ethereum:   amount: '1000000000000000000000000',
@hoprnet/hopr-core-ethereum:   accounts: [ '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f' ]
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Funded: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum:       âœ“ should initialize hashedSecret (971ms)
@hoprnet/hopr-core-ethereum:       âœ“ should already be initialized (353ms)
@hoprnet/hopr-core-ethereum:       âœ“ should reinitialize hashedSecret when off-chain secret is missing (926ms)
@hoprnet/hopr-core-ethereum: Closing ganache instance
@hoprnet/hopr-core-ethereum: Network closed
@hoprnet/hopr-core-ethereum: Starting ganache instance
@hoprnet/hopr-core-ethereum: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core-ethereum: $ hardhat migrate
@hoprnet/hopr-core-ethereum: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Running task "migrate" with config: {
@hoprnet/hopr-core-ethereum:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   shouldVerify: false,
@hoprnet/hopr-core-ethereum:   mintUsing: 'minter',
@hoprnet/hopr-core-ethereum:   revokeRoles: false
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Deploying ERC1820Registry
@hoprnet/hopr-core-ethereum: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core-ethereum: Deploying hoprToken
@hoprnet/hopr-core-ethereum: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core-ethereum: Deploying hoprChannels
@hoprnet/hopr-core-ethereum: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core-ethereum: Deploying hoprMinter
@hoprnet/hopr-core-ethereum: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core-ethereum: Updating addresses.json
@hoprnet/hopr-core-ethereum: Updated addresses.json for localhost network
@hoprnet/hopr-core-ethereum: $ hardhat fund --address 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E --accounts-to-fund 1
@hoprnet/hopr-core-ethereum: Running task "fund" with config: {
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   address: '0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E',
@hoprnet/hopr-core-ethereum:   amount: '1000000000000000000000000',
@hoprnet/hopr-core-ethereum:   accounts: [ '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f' ]
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Funded: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum:       âœ“ should submit hashedSecret when on-chain secret is missing (9865ms)
@hoprnet/hopr-core-ethereum: Closing ganache instance
@hoprnet/hopr-core-ethereum: Network closed
@hoprnet/hopr-core-ethereum:   test connector
@hoprnet/hopr-core-ethereum: Starting ganache instance
@hoprnet/hopr-core-ethereum: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core-ethereum: $ hardhat migrate
@hoprnet/hopr-core-ethereum: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Running task "migrate" with config: {
@hoprnet/hopr-core-ethereum:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   shouldVerify: false,
@hoprnet/hopr-core-ethereum:   mintUsing: 'minter',
@hoprnet/hopr-core-ethereum:   revokeRoles: false
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Deploying ERC1820Registry
@hoprnet/hopr-core-ethereum: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core-ethereum: Deploying hoprToken
@hoprnet/hopr-core-ethereum: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core-ethereum: Deploying hoprChannels
@hoprnet/hopr-core-ethereum: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core-ethereum: Deploying hoprMinter
@hoprnet/hopr-core-ethereum: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core-ethereum: Updating addresses.json
@hoprnet/hopr-core-ethereum: Updated addresses.json for localhost network
@hoprnet/hopr-core-ethereum: $ hardhat fund --address 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E --accounts-to-fund 2
@hoprnet/hopr-core-ethereum: Running task "fund" with config: {
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   address: '0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E',
@hoprnet/hopr-core-ethereum:   amount: '1000000000000000000000000',
@hoprnet/hopr-core-ethereum:   accounts: [
@hoprnet/hopr-core-ethereum:     '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:     '0x32C160A5008e517Ce06Df4f7d4a39fFC52E049cf'
@hoprnet/hopr-core-ethereum:   ]
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Funded: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Funded: 0x32C160A5008e517Ce06Df4f7d4a39fFC52E049cf
@hoprnet/hopr-core-ethereum:     âœ“ should catch initOnchainValues (914ms)
@hoprnet/hopr-core-ethereum:     events
@hoprnet/hopr-core-ethereum:       âœ“ should clear events once resolved (220ms)
@hoprnet/hopr-core-ethereum: Closing ganache instance
@hoprnet/hopr-core-ethereum: Network closed
@hoprnet/hopr-core-ethereum:   test withdraw
@hoprnet/hopr-core-ethereum: Starting ganache instance
@hoprnet/hopr-core-ethereum: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core-ethereum: $ hardhat migrate
@hoprnet/hopr-core-ethereum: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Running task "migrate" with config: {
@hoprnet/hopr-core-ethereum:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   shouldVerify: false,
@hoprnet/hopr-core-ethereum:   mintUsing: 'minter',
@hoprnet/hopr-core-ethereum:   revokeRoles: false
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Deploying ERC1820Registry
@hoprnet/hopr-core-ethereum: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core-ethereum: Deploying hoprToken
@hoprnet/hopr-core-ethereum: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core-ethereum: Deploying hoprChannels
@hoprnet/hopr-core-ethereum: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core-ethereum: Deploying hoprMinter
@hoprnet/hopr-core-ethereum: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core-ethereum: Updating addresses.json
@hoprnet/hopr-core-ethereum: Updated addresses.json for localhost network
@hoprnet/hopr-core-ethereum: $ hardhat fund --address 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E --accounts-to-fund 2
@hoprnet/hopr-core-ethereum: Running task "fund" with config: {
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   address: '0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E',
@hoprnet/hopr-core-ethereum:   amount: '1000000000000000000000000',
@hoprnet/hopr-core-ethereum:   accounts: [
@hoprnet/hopr-core-ethereum:     '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:     '0x32C160A5008e517Ce06Df4f7d4a39fFC52E049cf'
@hoprnet/hopr-core-ethereum:   ]
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Funded: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Funded: 0x32C160A5008e517Ce06Df4f7d4a39fFC52E049cf
@hoprnet/hopr-core-ethereum:     âœ“ should withdraw 1 wei (ETH) (52ms)
@hoprnet/hopr-core-ethereum:     âœ“ should withdraw 1 wei (HOPR) (71ms)
@hoprnet/hopr-core-ethereum: Closing ganache instance
@hoprnet/hopr-core-ethereum: Network closed
@hoprnet/hopr-core-ethereum:   test indexer
@hoprnet/hopr-core-ethereum: Starting ganache instance
@hoprnet/hopr-core-ethereum: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core-ethereum: $ hardhat migrate
@hoprnet/hopr-core-ethereum: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Running task "migrate" with config: {
@hoprnet/hopr-core-ethereum:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   shouldVerify: false,
@hoprnet/hopr-core-ethereum:   mintUsing: 'minter',
@hoprnet/hopr-core-ethereum:   revokeRoles: false
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Deploying ERC1820Registry
@hoprnet/hopr-core-ethereum: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core-ethereum: Deploying hoprToken
@hoprnet/hopr-core-ethereum: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core-ethereum: Deploying hoprChannels
@hoprnet/hopr-core-ethereum: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core-ethereum: Deploying hoprMinter
@hoprnet/hopr-core-ethereum: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core-ethereum: Updating addresses.json
@hoprnet/hopr-core-ethereum: Updated addresses.json for localhost network
@hoprnet/hopr-core-ethereum: $ hardhat fund --address 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E --accounts-to-fund 4
@hoprnet/hopr-core-ethereum: Running task "fund" with config: {
@hoprnet/hopr-core-ethereum:   network: 'localhost',
@hoprnet/hopr-core-ethereum:   address: '0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E',
@hoprnet/hopr-core-ethereum:   amount: '1000000000000000000000000',
@hoprnet/hopr-core-ethereum:   accounts: [
@hoprnet/hopr-core-ethereum:     '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core-ethereum:     '0x32C160A5008e517Ce06Df4f7d4a39fFC52E049cf',
@hoprnet/hopr-core-ethereum:     '0xbd9c6A0b75F383FA94dCB8543CdEf83cFe74274B',
@hoprnet/hopr-core-ethereum:     '0xEd5526CAD966596b5861583a5dAcF5511049a7f0'
@hoprnet/hopr-core-ethereum:   ]
@hoprnet/hopr-core-ethereum: }
@hoprnet/hopr-core-ethereum: Funded: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core-ethereum: Funded: 0x32C160A5008e517Ce06Df4f7d4a39fFC52E049cf
@hoprnet/hopr-core-ethereum: Funded: 0xbd9c6A0b75F383FA94dCB8543CdEf83cFe74274B
@hoprnet/hopr-core-ethereum: Funded: 0xEd5526CAD966596b5861583a5dAcF5511049a7f0
@hoprnet/hopr-core-ethereum:     intergration tests
@hoprnet/hopr-core-ethereum:       âœ“ should not store channel before confirmations (315ms)
@hoprnet/hopr-core-ethereum:       âœ“ should store channel & blockNumber correctly (103ms)
@hoprnet/hopr-core-ethereum:       âœ“ should find all channels
@hoprnet/hopr-core-ethereum:       âœ“ should find channel using partyA
@hoprnet/hopr-core-ethereum:       âœ“ should find channel using partyB
@hoprnet/hopr-core-ethereum:       âœ“ should find channel using partyA & partyB
@hoprnet/hopr-core-ethereum:       âœ“ should store another channel (272ms)
@hoprnet/hopr-core-ethereum:       âœ“ should not delete channel before confirmations (260ms)
@hoprnet/hopr-core-ethereum:       âœ“ should delete channel (100ms)
@hoprnet/hopr-core-ethereum:       âœ“ should stop indexer and open new channel (111ms)
@hoprnet/hopr-core-ethereum:       âœ“ should not index new channel (93ms)
@hoprnet/hopr-core-ethereum:       âœ“ should start indexer (1007ms)
@hoprnet/hopr-core-ethereum:     unit tests
@hoprnet/hopr-core-ethereum:       âœ“ should not store older channel according to blockNumber
@hoprnet/hopr-core-ethereum:       âœ“ should not delete latest channel according to blockNumber
@hoprnet/hopr-core-ethereum:       âœ“ should not store older channel according to transactionIndex
@hoprnet/hopr-core-ethereum:       âœ“ should not delete latest channel according to transactionIndex
@hoprnet/hopr-core-ethereum:       âœ“ should not store older channel according to logIndex
@hoprnet/hopr-core-ethereum:       âœ“ should not delete latest channel according to logIndex
@hoprnet/hopr-core-ethereum:       âœ“ should filter channels
@hoprnet/hopr-core-ethereum: Closing ganache instance
@hoprnet/hopr-core-ethereum: Network closed
@hoprnet/hopr-core-ethereum:   nonce-tracker
@hoprnet/hopr-core-ethereum:     âœ“ should create nonces from 1 to 10
@hoprnet/hopr-core-ethereum:     âœ“ should create nonces from 5 to 10 because we have 5 confirmed
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 4 when we have 3 confirmed and 1 pending
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 2 again when nonce 2 has failed
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 32 when we dont have confirmed txs
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 0
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 2 when duplicate nonces exist
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 3 when local confirmed count is higher than network nonce
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 2 when local pending count is higher than other metrics
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 5 after those when provider nonce is higher than other metrics
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 5 after those when there are some pending nonces below the remote one and some over.
@hoprnet/hopr-core-ethereum:     âœ“ should create 0 nonce after network nonce when there are pending nonces non sequentially over the network nonce
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 50 after network nonce When all three return different values
@hoprnet/hopr-core-ethereum:     âœ“ should create nonce 74 after network nonce
@hoprnet/hopr-core-ethereum:   test BNE
@hoprnet/hopr-core-ethereum:     âœ“ should return a Uint8Array
@hoprnet/hopr-core-ethereum:   test Uint8ArrayE
@hoprnet/hopr-core-ethereum:     âœ“ should return an equal Uint8Array
@hoprnet/hopr-core-ethereum:     âœ“ should return a hex
@hoprnet/hopr-core-ethereum:     âœ“ should return a subarray
@hoprnet/hopr-core-ethereum:   test signedChannel construction
@hoprnet/hopr-core-ethereum:     âœ“ should create new signedChannel using struct
@hoprnet/hopr-core-ethereum:     âœ“ should create new signedChannel using array
@hoprnet/hopr-core-ethereum:     âœ“ should create new signedChannel out of continous memory
@hoprnet/hopr-core-ethereum:   test ticket construction
@hoprnet/hopr-core-ethereum:     âœ“ should create new ticket using struct
@hoprnet/hopr-core-ethereum:     âœ“ should create new ticket using array
@hoprnet/hopr-core-ethereum:     âœ“ should create new ticket out of continous memory
@hoprnet/hopr-core-ethereum:     âœ“ should generate the hash correctly #1
@hoprnet/hopr-core-ethereum:     âœ“ should generate the hash correctly #2
@hoprnet/hopr-core-ethereum:   test utils
@hoprnet/hopr-core-ethereum:     âœ“ should hash values
@hoprnet/hopr-core-ethereum:     âœ“ should sign and verify signer
@hoprnet/hopr-core-ethereum:     âœ“ should sign and verify messages
@hoprnet/hopr-core-ethereum:     âœ“ should get private key using public key
@hoprnet/hopr-core-ethereum:     âœ“ should get address using public key
@hoprnet/hopr-core-ethereum:     âœ“ should compute the winning probability properly
@hoprnet/hopr-core-ethereum:     âœ“ should compute a winning probability and convert it to float
@hoprnet/hopr-core-ethereum:   83 passing (2m)
@hoprnet/hopr-core: $ yarn testOnce
@hoprnet/hopr-core: $ node --trace-warnings --unhandled-rejections=strict node_modules/.bin/mocha --reporter=tap --full-trace --exit
@hoprnet/hopr-core: Starting ganache instance
@hoprnet/hopr-core: Network ready at ws://127.0.0.1:8545
@hoprnet/hopr-core: $ hardhat compile && hardhat extract
@hoprnet/hopr-core: Nothing to compile
@hoprnet/hopr-core: Creating Typechain artifacts in directory ./types for target truffle-v5
@hoprnet/hopr-core: Successfully generated Typechain artifacts!
@hoprnet/hopr-core: Extracting ABIs
@hoprnet/hopr-core: Extracted ABIs
@hoprnet/hopr-core: $ hardhat migrate
@hoprnet/hopr-core: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core: Running task "migrate" with config: {
@hoprnet/hopr-core:   deployer: '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core:   network: 'localhost',
@hoprnet/hopr-core:   shouldVerify: false,
@hoprnet/hopr-core:   mintUsing: 'minter',
@hoprnet/hopr-core:   revokeRoles: false
@hoprnet/hopr-core: }
@hoprnet/hopr-core: Deploying ERC1820Registry
@hoprnet/hopr-core: Deployed or Found ERC1820Registry: 0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24
@hoprnet/hopr-core: Deploying hoprToken
@hoprnet/hopr-core: Deployed hoprToken: 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E
@hoprnet/hopr-core: Deploying hoprChannels
@hoprnet/hopr-core: Deployed hoprChannels: 0x0a67180CF519aDF27f1FD32F7255bBa00B536FC6
@hoprnet/hopr-core: Deploying hoprMinter
@hoprnet/hopr-core: Deployed hoprMinter: 0x6c97048D67c39ADCe38bbB228fc1bA415fc8f096
@hoprnet/hopr-core: Updating addresses.json
@hoprnet/hopr-core: Updated addresses.json for localhost network
@hoprnet/hopr-core: $ hardhat fund --address 0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E --accounts-to-fund 5
@hoprnet/hopr-core: Running task "fund" with config: {
@hoprnet/hopr-core:   network: 'localhost',
@hoprnet/hopr-core:   address: '0x66DB78F4ADD912a6Cb92b672Dfa09028ecc3085E',
@hoprnet/hopr-core:   amount: '1000000000000000000000000',
@hoprnet/hopr-core:   accounts: [
@hoprnet/hopr-core:     '0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f',
@hoprnet/hopr-core:     '0x32C160A5008e517Ce06Df4f7d4a39fFC52E049cf',
@hoprnet/hopr-core:     '0xbd9c6A0b75F383FA94dCB8543CdEf83cFe74274B',
@hoprnet/hopr-core:     '0xEd5526CAD966596b5861583a5dAcF5511049a7f0',
@hoprnet/hopr-core:     '0xa1C9DB3C3a35B699Dfd638EF129dDa7ceb37F807'
@hoprnet/hopr-core:   ]
@hoprnet/hopr-core: }
@hoprnet/hopr-core: Funded: 0xB3Aa2138DE698597e2e3F84f60eF415d13731b6f
@hoprnet/hopr-core: Funded: 0x32C160A5008e517Ce06Df4f7d4a39fFC52E049cf
@hoprnet/hopr-core: Funded: 0xbd9c6A0b75F383FA94dCB8543CdEf83cFe74274B
@hoprnet/hopr-core: Funded: 0xEd5526CAD966596b5861583a5dAcF5511049a7f0
@hoprnet/hopr-core: Funded: 0xa1C9DB3C3a35B699Dfd638EF129dDa7ceb37F807
@hoprnet/hopr-core: ok 1 filters peers
@hoprnet/hopr-core: ok 2 test hopr-core should start a node
@hoprnet/hopr-core: ok 3 test hopr-core should not call ourself
@hoprnet/hopr-core: ok 4 check heartbeat mechanism should dispatch a heartbeat
@hoprnet/hopr-core: ok 5 check heartbeat mechanism should trigger a heartbeat timeout
@hoprnet/hopr-core: ok 6 test acknowledgement generation should generate a valid acknowledgement
@hoprnet/hopr-core: ok 7 test creation & verification of a challenge should create a verifiable challenge
@hoprnet/hopr-core: ok 8 test creation & transformation of a header should derive parameters
@hoprnet/hopr-core: ok 9 test creation & transformation of a header should create a header
@hoprnet/hopr-core: ok 10 test creation & transformation of a header should create a header with a path less than MAX_HOPS nodes
@hoprnet/hopr-core: ok 11 test creation & transformation of a header should create a header with exactly two nodes
@hoprnet/hopr-core: ok 12 test packet composition and decomposition should create packets and decompose them
@hoprnet/hopr-core: ok 13 test messages should create a Message object and encrypt / decrypt it
@hoprnet/hopr-core: ok 14 check serialization and deserialization of ticket objects should create a winning ticket
@hoprnet/hopr-core: ok 15 test mixer  should push and pop a single element
@hoprnet/hopr-core: ok 16 test mixer  should push and pop multiple element
@hoprnet/hopr-core: ok 17 test mixer  probabilistic test, packet ordering
@hoprnet/hopr-core: ok 18 unit test heartbeat check nodes is noop with empty store
@hoprnet/hopr-core: ok 19 unit test heartbeat check nodes is noop with only new peers
@hoprnet/hopr-core: ok 20 unit test heartbeat check nodes interacts with an old peer
@hoprnet/hopr-core: ok 21 unit test heartbeat test heartbeat flow
@hoprnet/hopr-core: ok 22 test PeerStore should register new peers
@hoprnet/hopr-core: ok 23 test PeerStore should allow randomSubset to be taken of peer ids
@hoprnet/hopr-core: ok 24 test PeerStore should _ping_ peers
@hoprnet/hopr-core: ok 25 test the STUN functionalities should launch a STUN server and connect to it
@hoprnet/hopr-core: ok 26 test pathfinder with some simple topologies should find a path through a reliable star
@hoprnet/hopr-core: ok 27 test pathfinder with some simple topologies should find the most valuable path through a reliable star
@hoprnet/hopr-core: ok 28 test pathfinder with some simple topologies should not find a path if it doesnt exist
@hoprnet/hopr-core: ok 29 test pathfinder with some simple topologies should find a path through a reliable arrow
@hoprnet/hopr-core: ok 30 test pathfinder with some simple topologies should not find a path if a node is unreliable
@hoprnet/hopr-core: ok 31 keypair/index.spec.ts test serialisation and deserialisation of encrypted keypair should serialize and deserialize a keypair
@hoprnet/hopr-core: ok 32 unit test validateUnacknowledgedTicket should pass if ticket is okay
@hoprnet/hopr-core: ok 33 unit test validateUnacknowledgedTicket should throw when signer is not sender
@hoprnet/hopr-core: ok 34 unit test validateUnacknowledgedTicket should throw when ticket amount is low
@hoprnet/hopr-core: ok 35 unit test validateUnacknowledgedTicket should throw when ticket chance is low
@hoprnet/hopr-core: ok 36 unit test validateUnacknowledgedTicket should throw if there no channel open
@hoprnet/hopr-core: ok 37 unit test validateUnacknowledgedTicket should throw if channel is not stored
@hoprnet/hopr-core: ok 38 unit test validateUnacknowledgedTicket should throw if ticket epoch does not match our account counter
@hoprnet/hopr-core: ok 39 unit test validateUnacknowledgedTicket should throw if ticket's channel iteration does not match the current channel iteration
@hoprnet/hopr-core: ok 40 unit test validateUnacknowledgedTicket should throw if channel does not have enough funds
@hoprnet/hopr-core: ok 41 unit test validateUnacknowledgedTicket should throw if channel does not have enough funds when you include unredeemed tickets
@hoprnet/hopr-core: ok 42 unit test validateCreatedTicket should pass if ticket is okay
@hoprnet/hopr-core: ok 43 unit test validateCreatedTicket should throw when signer is not sender
@hoprnet/hopr-core: # tests 43
@hoprnet/hopr-core: # pass 43
@hoprnet/hopr-core: # fail 0
@hoprnet/hopr-core: 1..43
@hoprnet/hopr-core: Closing ganache instance
@hoprnet/hopr-core: Network closed
@hoprnet/hoprd: $ mocha
@hoprnet/hoprd:   Commands
@hoprnet/hoprd:     âœ“ can import commands
@hoprnet/hoprd:     âœ“ can construct Commands object
@hoprnet/hoprd:     âœ“ responds to nonsense commands
@hoprnet/hoprd:     âœ“ ping
@hoprnet/hoprd:     âœ“ help
@hoprnet/hoprd:     âœ“ address
@hoprnet/hoprd: Sending message to 16Uiu2HAmAJStiomwq27Kkvtat8KiEHLBSnAkkKCqZmLYKVLtkiB7 ...
@hoprnet/hoprd: Sending message to 16Uiu2HAkyXRaL7fKu4qcjaKuo4WXizrpK63Ltd6kG2tH6oSV58AW via bafzaajiiaijccaw5avyldbn3txrklgjmgvjix53wnnwcbyxuvrwqs6t2scpeux272y ...
@hoprnet/hoprd: Sending message to 16Uiu2HAkyXRaL7fKu4qcjaKuo4WXizrpK63Ltd6kG2tH6oSV58AW via  ...
@hoprnet/hoprd:     âœ“ send message
@hoprnet/hoprd:     âœ“ autocomplete sendmessage
@hoprnet/hoprd: [2K[1A[2K[sending message "hello"]
@hoprnet/hoprd: [2K    âœ“ multisend
@hoprnet/hoprd:     âœ“ withdraw
@hoprnet/hoprd:     âœ“ settings
@hoprnet/hoprd:     âœ“ settings includeRecipient
@hoprnet/hoprd:     âœ“ settings strategy
@hoprnet/hoprd: Sending message to 16Uiu2HAmQDFS8a4Bj5PGaTqQLME5SZTRNikz9nUPT3G4T6YL9o7V ...
@hoprnet/hoprd:     âœ“ alias addresses
@hoprnet/hoprd:     âœ“ close channel
@hoprnet/hoprd:     âœ“ cover traffic
@hoprnet/hoprd:   LogStream
@hoprnet/hoprd:     âœ“ create logger
@hoprnet/hoprd:   17 passing (27ms)
[37;40mlerna[0m [0m[32;1msuccess[0m [0m[35mrun[0m Ran npm script 'test' in 5 packages in 247.8s:
[0m[37;40mlerna[0m [0m[32;1msuccess[0m[35m[0m - @hoprnet/hopr-core-ethereum
[0m[37;40mlerna[0m [0m[32;1msuccess[0m[35m[0m - @hoprnet/hopr-core
[0m[37;40mlerna[0m [0m[32;1msuccess[0m[35m[0m - @hoprnet/hopr-ethereum
[0m[37;40mlerna[0m [0m[32;1msuccess[0m[35m[0m - @hoprnet/hoprd
[0m[37;40mlerna[0m [0m[32;1msuccess[0m[35m[0m - @hoprnet/hopr-utils
[0m                                                                                                                                                                                                âœ¨  Done in 248.66s.
Iota:hoprnet bok$ exit

Script done on Tue Jan 12 21:17:19 2021
